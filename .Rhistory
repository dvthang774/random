wing2 <-55
wing3 <-53.5
wing4 <-55
wing5 <-52.3
wing6 <-57.5
wing7 <-53
wing8 <-55
wing1 <- 59
wingcrd <-c(59, 55, 53.5, 55, 52.5, 57.5, 53, 55)
#liệt kê phần tử từ 1 đến 5 của vector
wingcrd [1:5]
#thực hiện các phép toán trên vector
#sum, mean, max, min, median, var, sd
sum(wingcrd)
mean(wingcrd)
max(wingcrd)
median(wingcrd)
bien <-sum(wingcrd)
bien
wingcrd <-c(59, 55, 53.5, 55, 52.5, 57.5, 53, 55)
v <- c(7,12,28,3,41)
t <- c(14,7,6,19,3)
# Give the chart file a name.
png(file = "line_chart_2_lines.jpg")
# Plot the bar chart.
plot(v,type = "o",col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
lines(t, type = "o", col = "blue")
# Save the file.
dev.off()
v <- c(7,12,28,3,41)
t <- c(14,7,6,19,3)
# Give the chart file a name.
png(file = "line_chart_2_lines.jpg")
# Plot the bar chart.
plot(v,type = "o",col = "red", xlab = "Month", ylab = "Rain fall",
main = "Rain fall chart")
lines(t, type = "o", col = "blue")
# Save the file.
dev.off()
#loess
load(url('https://www.dropbox.com/s/ud32tbptyvjsnp4/data.R?dl=1'))
lw1 <- loess(y ~ x,data=data)
plot(y ~ x, data=data,pch=19,cex=0.1)
j <- order(data$x)
lines(data$x[j],lw1$fitted[j],col="red",lwd=3)
#fitted
library(ggplot2)
# Create dummy data
variety <- rep( c("soldur", "silur", "lloyd", "pescadou", "X4582", "Dudur", "Classic"), each=40)
treatment <- rep(c(rep("high" , 20) , rep("low" , 20)) , 7)
note <- c( rep(c(sample(0:4, 20 , replace=T) , sample(1:6, 20 , replace=T)),2),
rep(c(sample(5:7, 20 , replace=T), sample(5:9, 20 , replace=T)),2),
c(sample(0:4, 20 , replace=T) , sample(2:5, 20 , replace=T),
rep(c(sample(6:8, 20 , replace=T) , sample(7:10, 20 , replace=T)),2) ))
data=data.frame(variety, treatment ,  note)
# Reorder varieties (group) (mixing low and high treatments for the calculations)
new_order <- with(data, reorder(variety , note, mean , na.rm=T))
# Then I make the boxplot, asking to use the 2 factors : variety (in the good order) AND treatment :
par(mar=c(3,4,3,1))
myplot <- boxplot(note ~ treatment*new_order , data=data  ,
boxwex=0.4 , ylab="sickness",
main="sickness of several wheat lines" ,
col=c("slateblue1" , "tomato") ,
xaxt="n")
# To add the label of x axis
my_names <- sapply(strsplit(myplot$names , '\\.') , function(x) x[[2]] )
my_names <- my_names[seq(1 , length(my_names) , 2)]
axis(1,
at = seq(1.5 , 14 , 2),
labels = my_names ,
tick=FALSE , cex=0.3)
# Add the grey vertical lines
for(i in seq(0.5 , 20 , 2)){
abline(v=i,lty=1, col="grey")
}
# Add a legend
legend("bottomright", legend = c("High treatment", "Low treatment"),
col=c("slateblue1" , "tomato"),
pch = 15, bty = "n", pt.cex = 3, cex = 1.2,  horiz = F, inset = c(0.1, 0.1))
answer <- 0
for (j in 3:5){answer<-j+answer}
answer
answer <- 10
for (j in 3:5){answer<-j*answer}
answer
help("prod")
list1 = list(c(1,2,3),3,5,c(2,3,6))#tạo list
sapply(list1, length)# áp dụng một hàm cho từng phần tử của danh sách và lấy lại 1 vecto
#1/
answer <- 0
for (j in 3: 5) {answer <- j + answer}
answer
answer <- 10
for (j in 3:5){ answer <- j+answer }
anser
answer <- 10
for (j in 3:5){ answer <- j*answer }
answer
#2/
help(prod)
prod(3:5,10, na.rm = FALSE)
#3/su <- 0
for (i in 1:100){su <- su + i }
su
sum(1:100, na.rm = FALSE)
#4/
po <- 1
for (i in 1:50){po <- po * i}
po
prod(1:50, na.rm = FALSE)
#5/
radius <- (3:20)
volume <- (4/3*pi*(radius**3))
conversion <- data.frame(radius=radius, volume=volume)
print(conversion)
#6/)
tinting <- conversion
sapply(tinting, is.factor)
sapply(tinting[, 1:2], levels)
sapply(tinting[, 1:2], is.ordered)
sapply(tinting[, 1:2], ordered)
tinting <- conversion
sapply(tinting, factor)
sapply(tinting[, 1:2], levels)
sapply(tinting[, 1:2], ordered)
is.ordered()
help(is.ordered())
#1/
answer <- 0
for (j in 3: 5) {answer <- j + answer}
answer
answer <- 10
for (j in 3:5){ answer <- j+answer }
anser
answer <- 10
for (j in 3:5){ answer <- j*answer }
answer
#2/
help(prod)
prod(3:5,10, na.rm = FALSE)
#3/su <- 0
for (i in 1:100){su <- su + i }
su
sum(1:100, na.rm = FALSE)
#4/
po <- 1
for (i in 1:50){po <- po * i}
po
prod(1:50, na.rm = FALSE)
#5/
radius <- (3:20)
volume <- (4/3*pi*(radius**3))
conversion <- data.frame(radius=radius, volume=volume)
print(conversion)
#6/)
help(sapply)
tinting <- conversion
sapply(tinting, factor)
sapply(tinting[, 1:2], levels)
sapply(tinting[, 1:2], ordered)
#6.3 Function
#6.3.1. Zeros and NAs
setwd("D:/Giang Day/R Programming/Chapter 6")
Veg <- read.table(file="Vegetation2.txt", header = TRUE)
names(Veg)
#Hàm kiểm tra xem trong cột có bao nhiêu biến chứa NA
NAPerVariable <- function(X1){
D1 <- is.na(X1)
colSums(D1)
}
NAPerVariable(Veg)
CP <- read.table(file="CodParasite.txt", header = TRUE)
NAPerVariable(CP)
#Hàm kiểm tra biến zero (0)
ZeroPerVariable <- function(X1){
D1= (X1==0)
colSums(D1)
}
ZeroPerVariable(Veg)
ZeroPerVariable(CP)
ZeroPerVariable <- function(X1){
D1= (X1==0)
colSums(D1, na.rm = TRUE)
}
ZeroPerVariable(Veg)
ZeroPerVariable(CP)
#6.3.2 Hàm có nhiều tham số
VariableInfo <-function(X1, Choice1){
if (Choice1== "Zeros") {
D1= (X1==0)
}
if (Choice1== "NAs") {
D1 <- is.na(X1)
}
colSums(D1, na.rm=TRUE)
}
VariableInfo(CP,"Zeros")
VariableInfo(CP,"NAs")
VariableInfo(CP,"thamso")
VariableInfo(CP)
#6.3.3
#Gán giá trị mặc định cho Choice1
VariableInfo <-function(X1, Choice1="Zeros"){
if (Choice1== "Zeros") {
D1= (X1==0)
}
if (Choice1== "NAs") {
D1 <- is.na(X1)
}
colSums(D1, na.rm=TRUE)
}
VariableInfo(CP,"Zeros")
VariableInfo(CP,"NAs")
VariableInfo(CP,"thamso")
VariableInfo(CP)
#Tham số không giống với giá trị của chúng ta
#Đưa ra 1 thông báo
VariableInfo <-function(X1, Choice1="Zeros"){
if (Choice1== "Zeros") {
D1= (X1==0)
}
if (Choice1== "NAs") {
D1 <- is.na(X1)
}
if (Choice1!= "Zeros" & Choice1 != "NAs") {
print("You make a miss typo.You should choose: Zeros or NAs")
}else{
colSums(D1, na.rm=TRUE)
}
}
VariableInfo(CP,"Zeros")
VariableInfo(CP,"NAs")
VariableInfo(CP,"thamso")
VariableInfo(CP)
#6.3 Function
#6.3.1. Zeros and NAs
setwd("C:\Users\Admin\random")
Veg <- read.table(file="Vegetation2.txt", header = TRUE)
names(Veg)
#Hàm kiểm tra xem trong cột có bao nhiêu biến chứa NA
NAPerVariable <- function(X1){
D1 <- is.na(X1)
colSums(D1)
}
NAPerVariable(Veg)
CP <- read.table(file="CodParasite.txt", header = TRUE)
NAPerVariable(CP)
#Hàm kiểm tra biến zero (0)
ZeroPerVariable <- function(X1){
D1= (X1==0)
colSums(D1)
}
ZeroPerVariable(Veg)
ZeroPerVariable(CP)
ZeroPerVariable <- function(X1){
D1= (X1==0)
colSums(D1, na.rm = TRUE)
}
ZeroPerVariable(Veg)
ZeroPerVariable(CP)
#6.3.2 Hàm có nhiều tham số
VariableInfo <-function(X1, Choice1){
if (Choice1== "Zeros") {
D1= (X1==0)
}
if (Choice1== "NAs") {
D1 <- is.na(X1)
}
colSums(D1, na.rm=TRUE)
}
VariableInfo(CP,"Zeros")
VariableInfo(CP,"NAs")
VariableInfo(CP,"thamso")
VariableInfo(CP)
#6.3.3
#Gán giá trị mặc định cho Choice1
VariableInfo <-function(X1, Choice1="Zeros"){
if (Choice1== "Zeros") {
D1= (X1==0)
}
if (Choice1== "NAs") {
D1 <- is.na(X1)
}
colSums(D1, na.rm=TRUE)
}
VariableInfo(CP,"Zeros")3
VariableInfo(CP,"NAs")
VariableInfo(CP,"thamso")
VariableInfo(CP)
#Tham số không giống với giá trị của chúng ta
#Đưa ra 1 thông báo
VariableInfo <-function(X1, Choice1="Zeros"){
if (Choice1== "Zeros") {
D1= (X1==0)
}
if (Choice1== "NAs") {
D1 <- is.na(X1)
}
if (Choice1!= "Zeros" & Choice1 != "NAs") {
print("You make a miss typo.You should choose: Zeros or NAs")
}else{
colSums(D1, na.rm=TRUE)
}
}
VariableInfo(CP,"Zeros")
VariableInfo(CP,"NAs")
VariableInfo(CP,"thamso")
VariableInfo(CP)
#6.3.1. Zeros and NAs
setwd("C:\Users\Admin\random")
#6.3 Function
#6.3.1. Zeros and NAs
setwd("C:\\Users\\Admin\\random")
Veg <- read.table(file="Vegetation2.txt", header = TRUE)
names(Veg)
#Hàm kiểm tra xem trong cột có bao nhiêu biến chứa NA
NAPerVariable <- function(X1){
D1 <- is.na(X1)
colSums(D1)
}
NAPerVariable(Veg)
CP <- read.table(file="CodParasite.txt", header = TRUE)
NAPerVariable(CP)
#Hàm kiểm tra biến zero (0)
ZeroPerVariable <- function(X1){
D1= (X1==0)
colSums(D1)
}
ZeroPerVariable(Veg)
ZeroPerVariable(CP)
ZeroPerVariable <- function(X1){
D1= (X1==0)
colSums(D1, na.rm = TRUE)
}
ZeroPerVariable(Veg)
ZeroPerVariable(CP)
#6.3.2 Hàm có nhiều tham số
VariableInfo <-function(X1, Choice1){
if (Choice1== "Zeros") {
D1= (X1==0)
}
if (Choice1== "NAs") {
D1 <- is.na(X1)
}
colSums(D1, na.rm=TRUE)
}
VariableInfo(CP,"Zeros")
VariableInfo(CP,"NAs")
VariableInfo(CP,"thamso")
VariableInfo(CP)
#6.3.3
#Gán giá trị mặc định cho Choice1
VariableInfo <-function(X1, Choice1="Zeros"){
if (Choice1== "Zeros") {
D1= (X1==0)
}
if (Choice1== "NAs") {
D1 <- is.na(X1)
}
colSums(D1, na.rm=TRUE)
}
VariableInfo(CP,"Zeros")3
VariableInfo(CP,"NAs")
VariableInfo(CP,"thamso")
VariableInfo(CP)
#Tham số không giống với giá trị của chúng ta
#Đưa ra 1 thông báo
VariableInfo <-function(X1, Choice1="Zeros"){
if (Choice1== "Zeros") {
D1= (X1==0)
}
if (Choice1== "NAs") {
D1 <- is.na(X1)
}
if (Choice1!= "Zeros" & Choice1 != "NAs") {
print("You make a miss typo.You should choose: Zeros or NAs")
}else{
colSums(D1, na.rm=TRUE)
}
}
VariableInfo(CP,"Zeros")
VariableInfo(CP,"NAs")
VariableInfo(CP,"thamso")
VariableInfo(CP)
